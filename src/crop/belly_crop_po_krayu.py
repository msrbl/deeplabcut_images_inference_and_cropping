import csv
import os
import cv2
import numpy as np

# –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ —Ç–æ—á–µ–∫ (–∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è —Å –Ω—É–ª—è)
ORDERED_INDICES = [0, 1, 2, 5, 8, 11, 14, 17, 20, 19, 18, 15, 12, 9, 6, 3, 0]

def parse_coords_from_row(row):
    coords = []
    for i in range(1, len(row), 3):  # –∫–∞–∂–¥–∞—è —Ç—Ä–æ–π–∫–∞ ‚Äî x, y, likelihood
        try:
            x = float(row[i])
            y = float(row[i + 1])
            coords.append((x, y))
        except (IndexError, ValueError):
            continue
    return coords

def crop_polygon_from_ordered_points(img, all_points, ordered_indices):
    polygon_points = []
    for i in ordered_indices:
        if i < len(all_points):
            polygon_points.append(all_points[i])
    if len(polygon_points) < 3:
        return None, None, None

    contour = np.round(np.array(polygon_points)).astype(np.int32).reshape((-1, 1, 2))

    mask = np.zeros(img.shape[:2], dtype=np.uint8)
    cv2.fillPoly(mask, [contour], 255)
    masked = cv2.bitwise_and(img, img, mask=mask)

    x, y, w, h = cv2.boundingRect(contour)
    return masked[y:y+h, x:x+w], polygon_points, contour

def process_csv_and_images(csv_path, output_folder):
    os.makedirs(output_folder, exist_ok=True)

    with open(csv_path, newline='') as csvfile:
        reader = csv.reader(csvfile)

        for idx, row in enumerate(reader):
            if idx < 4:
                continue

            img_path = row[0]
            if not os.path.isfile(img_path):
                print(f"‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {img_path}")
                continue

            coords = parse_coords_from_row(row)
            if len(coords) < 3:
                print(f"‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç: {img_path}")
                continue

            img = cv2.imread(img_path)
            if img is None:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {img_path}")
                continue

            cropped, polygon_points, contour = crop_polygon_from_ordered_points(img, coords, ORDERED_INDICES)
            if cropped is None:
                print(f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤–∞–ª–∏–¥–Ω—ã—Ö —Ç–æ—á–µ–∫ –¥–ª—è –æ–±—Ä–µ–∑–∫–∏: {img_path}")
                continue

            # –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –≤—Å–µ—Ö —Ç–æ—á–µ–∫
            for i, (x, y) in enumerate(coords):
                pt = (int(x), int(y))
                color = (0, 255, 0) if i in ORDERED_INDICES else (0, 0, 255)
                cv2.circle(img, pt, 5, color, -1)
                cv2.putText(img, str(i+1), (pt[0]+5, pt[1]-5), cv2.FONT_HERSHEY_SIMPLEX, 0.5, color, 1, cv2.LINE_AA)

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            filename = os.path.basename(img_path)
            save_path = os.path.join(output_folder, filename)
            cv2.imwrite(save_path, cropped)

            print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {img_path}")
            print("üìê –ö–æ–Ω—Ç—É—Ä –∏–∑ —Ç–æ—á–µ–∫:")
            print(np.array(polygon_points))
            print(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {save_path}\n")



# –ó–∞–ø—É—Å–∫
process_csv_and_images('D:/crop/bra/annotations.csv', 'D:/crop/save_crop')